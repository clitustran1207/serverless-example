service: serverless-example

custom:
  dynamodb:
    start:
      migrate: true

    seed:
      test:
        sources:
          - table: user
            sources: [./models/seeds/user.json]
          - table: group
            sources: [./models/seeds/groups.json]

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: ap-southeast-1
  profile: serverless-deploy2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UserTable", "GroupTable", "Arn"] }
  environment:
    MY_ENV: "my_env"

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: "ANY {proxy+}"

resources:
  Resources:
    UserTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: "user"
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    GroupTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: "group"
        AttributeDefinitions:
          - AttributeName: groupId
            AttributeType: S
        KeySchema:
          - AttributeName: groupId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-dynamodb-local
  - serverless-offline #serverless-offline needs to be last in the list
